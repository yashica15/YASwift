//
//  APIManager.swift
//  SupplyMedicine
//
//  Created by GalaxyWeblinks on 12/22/15.
//  Copyright Â© 2015 GalaxyWeblinks. All rights reserved.
//

import Foundation
import Alamofire

class APIManager {
    
    var delegate :AnyObject?
    var callbackSelector : Selector?
    
    /*!
    @brief Created By   : Sumit
    @brief Date         : 23-Dec-2015
    @brief Description  : Sends Asynchronous POST request on input URL and respond back to call back selector method.
    @brief Update by    : --
    @brief Update Date  : --
    @brief Reason       : Method to send POST request to server and respond back call back selector.
    */
    
    func initWithDelegate(aDelegate : AnyObject,aCallbackSel : Selector) -> AnyObject {
        
        self.delegate = aDelegate;
        self.callbackSelector = aCallbackSel;
        
        return self
    }
    
    func getObjectFromServer(requestURL : String, requestParameter : Dictionary <String, AnyObject>? ){
        
        let URL = kAPI_SERVERBASEURL + requestURL
        var returnObject : Dictionary <String, AnyObject> = [:]
        
        Alamofire.request(.POST, URL, parameters: requestParameter , encoding: .JSON)
            .responseJSON {
                response in
                print("REQUEST : ", response.request)  // original URL request
                print("RESPONSE : ",response) // URL response
                print("DATA : ",response.data)     // server data
                print("RESULT : ",response.result)   // result of response serialization
                if let JSON = response.result.value {
                    //print("JSON: \(JSON)")
                    returnObject = JSON as! Dictionary<String, AnyObject>
                    
                    var responseObj=ResponseObj()
                    //Changes if response code is 605 it is Token not found in that case view will navigate to Home screen
                  responseObj = try! responseObj.objectFormat(returnObject)
                    
                    if(responseObj.responseCode==605){
                        let alert = UIAlertController(title: kAlertTitle_Alert, message:responseObj.responseErrMessage, preferredStyle: UIAlertControllerStyle.Alert)
                       
                        alert.addAction(UIAlertAction(title: "OK", style: .Default, handler: { action in
                            switch action.style{
                            case .Default:
                                print("default")
                                AppDelegate().appDelegate().logout()

                            case .Cancel:
                                print("cancel")
                                
                            case .Destructive:
                                print("destructive")
                            }
                        }))
                        self.delegate!.presentViewController(alert, animated: true, completion: nil)
                    }
                    
                    self.delegate?.performSelector(self.callbackSelector!, withObject:responseObj)
                   return
                }else{
                    let responseObj=ResponseObj()
                    if response.response==nil{
                        
                        
                        
                    }else{
                        let responseStatus = response.response! as  NSHTTPURLResponse
                        responseObj.responseCode = responseStatus.statusCode
                        
                    }
                    
                  
                    
                    responseObj.responseErrMessage = "Have  Some Server Error"
                    self.delegate?.performSelector(self.callbackSelector!, withObject:responseObj)
                    return
                }
        }
        
    }
}